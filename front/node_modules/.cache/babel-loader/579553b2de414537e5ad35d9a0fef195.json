{"ast":null,"code":"var _jsxFileName = \"/Users/art/Desktop/transcendence/transcendence/transcendence/src/components/game/game.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { Component } from 'react'; // import { Canvas } from '../canvas/canvas.component';\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Game = () => {\n  _s();\n\n  const [score_1, setScore_1] = useState(0);\n  const [score_2, setScore_2] = useState(0);\n  const [pos_1, setPos_1] = useState(50);\n  const [pos_2, setPos_2] = useState(20);\n  const [width, setWidth] = useState(50);\n  const [height, setHeight] = useState(20); // constructor()\n  // {\n  //     super();\n  //     this.state = {\n  //       score_player_1: 0,\n  //       score_player_2: 0,\n  //       player_1_position: 50,\n  //       player_2_position: 0\n  //     }\n  // }\n\n  const drawBall = (context, x, y) => {\n    context.fillStyle = \"white\";\n    context.fillRect(x, y, 20, 20);\n  };\n\n  const drawPeddle = (context, x, y) => {\n    context.fillStyle = \"white\";\n    context.fillRect(x, y, 20, 80);\n  };\n\n  const drawLine = (context, width, height) => {\n    context.strokeStyle = \"white\";\n    context.setLineDash([15, 5]);\n    context.moveTo(width / 2, 0);\n    context.lineTo(width / 2, height + 5);\n    context.stroke();\n  };\n\n  const drawScore = (context, width, height) => {\n    context.font = \"100px Mina\";\n    context.fillStyle = \"white\";\n    context.fillText(score_1, width / 4, height / 4);\n    context.fillText(score_2, width * 3 / 4, height / 4);\n  };\n\n  const draw = (context, width, height, player_1_position) => {\n    context.fillStyle = \"black\";\n    context.fillRect(0, 0, width, height);\n    context.beginPath();\n    drawBall(context, 200, 200);\n    drawLine(context, width, height);\n    drawPeddle(context, 10, player_1_position);\n    drawPeddle(context, width - 30, 150);\n    drawScore(context, width, height);\n  }; // componentWillMount() {\n  //     window.addEventListener('keydown', this.handleKeyboardInput.bind(this));\n  // }  \n  // handleKeyboardInput = (e) => {\n  //     const code = e.keyCode ? e.keyCode : e.which;\n  //     if (code === 38) { //up key\n  //         this.setState({ keyboardInput: {'Y', -1 }});\n  //     }\n  // }\n\n\n  const canvasRef = useRef();\n  useEffect(() => {\n    const context = canvasRef.current.getContext(\"2d\");\n    draw(context, width, height, player_one_position);\n  });\n  render();\n  {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"canvas\",\n          ref: canvasRef,\n          width: width,\n          height: height,\n          style: {\n            border: '2px solid #000',\n            marginTop: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Game, \"ca4egWQJ9fJApkDFKxvuXl5BaMU=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/art/Desktop/transcendence/transcendence/transcendence/src/components/game/game.component.jsx"],"names":["Component","useState","useEffect","useRef","Game","score_1","setScore_1","score_2","setScore_2","pos_1","setPos_1","pos_2","setPos_2","width","setWidth","height","setHeight","drawBall","context","x","y","fillStyle","fillRect","drawPeddle","drawLine","strokeStyle","setLineDash","moveTo","lineTo","stroke","drawScore","font","fillText","draw","player_1_position","beginPath","canvasRef","current","getContext","player_one_position","render","textAlign","border","marginTop"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B,C,CACA;;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;;AAGA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC,CAPsB,CAQtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,QAAMgB,QAAQ,GAAG,CAACC,OAAD,EAAUC,CAAV,EAAaC,CAAb,KAAmB;AAChCF,IAAAA,OAAO,CAACG,SAAR,GAAoB,OAApB;AACAH,IAAAA,OAAO,CAACI,QAAR,CAAiBH,CAAjB,EAAoBC,CAApB,EAAuB,EAAvB,EAA2B,EAA3B;AACH,GAHD;;AAIA,QAAMG,UAAU,GAAG,CAACL,OAAD,EAAUC,CAAV,EAAaC,CAAb,KAAmB;AAClCF,IAAAA,OAAO,CAACG,SAAR,GAAoB,OAApB;AACAH,IAAAA,OAAO,CAACI,QAAR,CAAiBH,CAAjB,EAAoBC,CAApB,EAAuB,EAAvB,EAA4B,EAA5B;AACH,GAHD;;AAKA,QAAMI,QAAQ,GAAG,CAACN,OAAD,EAAUL,KAAV,EAAiBE,MAAjB,KAA4B;AAEzCG,IAAAA,OAAO,CAACO,WAAR,GAAsB,OAAtB;AACAP,IAAAA,OAAO,CAACQ,WAAR,CAAoB,CAAC,EAAD,EAAK,CAAL,CAApB;AACAR,IAAAA,OAAO,CAACS,MAAR,CAAed,KAAK,GAAG,CAAvB,EAA0B,CAA1B;AACAK,IAAAA,OAAO,CAACU,MAAR,CAAef,KAAK,GAAG,CAAvB,EAA0BE,MAAM,GAAG,CAAnC;AACAG,IAAAA,OAAO,CAACW,MAAR;AACH,GAPD;;AASA,QAAMC,SAAS,GAAG,CAACZ,OAAD,EAAUL,KAAV,EAAiBE,MAAjB,KAA4B;AAC1CG,IAAAA,OAAO,CAACa,IAAR,GAAe,YAAf;AACAb,IAAAA,OAAO,CAACG,SAAR,GAAoB,OAApB;AACAH,IAAAA,OAAO,CAACc,QAAR,CAAiB3B,OAAjB,EAA2BQ,KAAK,GAAG,CAAnC,EAAuCE,MAAM,GAAG,CAAhD;AACAG,IAAAA,OAAO,CAACc,QAAR,CAAiBzB,OAAjB,EAA2BM,KAAK,GAAG,CAAR,GAAY,CAAvC,EAA2CE,MAAM,GAAG,CAApD;AACH,GALD;;AAOA,QAAMkB,IAAI,GAAG,CAACf,OAAD,EAAUL,KAAV,EAAiBE,MAAjB,EAAyBmB,iBAAzB,KAA+C;AAC5DhB,IAAAA,OAAO,CAACG,SAAR,GAAoB,OAApB;AACAH,IAAAA,OAAO,CAACI,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuBT,KAAvB,EAA+BE,MAA/B;AACAG,IAAAA,OAAO,CAACiB,SAAR;AACAlB,IAAAA,QAAQ,CAACC,OAAD,EAAU,GAAV,EAAe,GAAf,CAAR;AACAM,IAAAA,QAAQ,CAACN,OAAD,EAAUL,KAAV,EAAiBE,MAAjB,CAAR;AACAQ,IAAAA,UAAU,CAACL,OAAD,EAAU,EAAV,EAAcgB,iBAAd,CAAV;AACAX,IAAAA,UAAU,CAACL,OAAD,EAAUL,KAAK,GAAG,EAAlB,EAAsB,GAAtB,CAAV;AACAiB,IAAAA,SAAS,CAACZ,OAAD,EAAUL,KAAV,EAAiBE,MAAjB,CAAT;AAED,GAVC,CA7CsB,CAyDtB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA,QAAMqB,SAAS,GAAIjC,MAAM,EAAzB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,OAAO,GAAGkB,SAAS,CAACC,OAAV,CAAkBC,UAAlB,CAA6B,IAA7B,CAAhB;AACAL,IAAAA,IAAI,CAACf,OAAD,EAAUL,KAAV,EAAiBE,MAAjB,EAAyBwB,mBAAzB,CAAJ;AACD,GAHM,CAAT;AAIAC,EAAAA,MAAM;AACN;AAEI,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AACR,QAAA,KAAK,EAAE;AACLC,UAAAA,SAAS,EAAE;AADN,SADC;AAAA,+BAIR;AACE,UAAA,EAAE,EAAC,QADL;AAEE,UAAA,GAAG,EAAEL,SAFP;AAGE,UAAA,KAAK,EAAEvB,KAHT;AAIE,UAAA,MAAM,EAAEE,MAJV;AAKE,UAAA,KAAK,EAAE;AACL2B,YAAAA,MAAM,EAAE,gBADH;AAELC,YAAAA,SAAS,EAAE;AAFN;AALT;AAAA;AAAA;AAAA;AAAA;AAJQ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH;AACJ,CAjGM;;GAAMvC,I;;KAAAA,I","sourcesContent":["import { Component } from 'react';\n// import { Canvas } from '../canvas/canvas.component';\nimport { useState, useEffect, useRef } from \"react\";\n\n\nexport const Game = () => {\n\n    const [score_1, setScore_1] = useState(0);\n    const [score_2, setScore_2] = useState(0);\n    const [pos_1, setPos_1] = useState(50);\n    const [pos_2, setPos_2] = useState(20);\n    const [width, setWidth] = useState(50);\n    const [height, setHeight] = useState(20);\n    // constructor()\n    // {\n    //     super();\n    //     this.state = {\n    //       score_player_1: 0,\n    //       score_player_2: 0,\n    //       player_1_position: 50,\n    //       player_2_position: 0\n    //     }\n\n    // }\n\n    const drawBall = (context, x, y) => {\n        context.fillStyle = \"white\";\n        context.fillRect(x, y, 20, 20);\n    }\n    const drawPeddle = (context, x, y) => {\n        context.fillStyle = \"white\";\n        context.fillRect(x, y, 20,  80);\n    }\n    \n    const drawLine = (context, width, height) => {\n    \n        context.strokeStyle = \"white\";\n        context.setLineDash([15, 5]);\n        context.moveTo(width / 2, 0);\n        context.lineTo(width / 2, height + 5);\n        context.stroke();  \n    }\n    \n    const drawScore = (context, width, height) => {\n        context.font = \"100px Mina\";\n        context.fillStyle = \"white\";\n        context.fillText(score_1,  width / 4 , height / 4);\n        context.fillText(score_2,  width * 3 / 4 , height / 4);\n    }\n\n    const draw = (context, width, height, player_1_position) => {\n    context.fillStyle = \"black\";\n    context.fillRect(0, 0, width,  height);\n    context.beginPath();\n    drawBall(context, 200, 200);\n    drawLine(context, width, height);\n    drawPeddle(context, 10, player_1_position);\n    drawPeddle(context, width - 30, 150);\n    drawScore(context, width, height);\n\n  };\n\n    // componentWillMount() {\n    //     window.addEventListener('keydown', this.handleKeyboardInput.bind(this));\n    // }  \n    // handleKeyboardInput = (e) => {\n    //     const code = e.keyCode ? e.keyCode : e.which;\n\n    //     if (code === 38) { //up key\n    //         this.setState({ keyboardInput: {'Y', -1 }});\n    //     }\n    // }\n    const canvasRef =  useRef();\n    useEffect(() => {\n        const context = canvasRef.current.getContext(\"2d\");\n        draw(context, width, height, player_one_position);\n      });\n    render()\n    {\n\n        return(\n            <div className='game'>\n                <h1>Game</h1>\n                {/* <Canvas draw={this.draw} height={500} width={900} player_1_position/> */}\n                <div\n        style={{\n          textAlign: 'center',\n        }}>\n        <canvas\n          id=\"canvas\"\n          ref={canvasRef}\n          width={width}\n          height={height}\n          style={{\n            border: '2px solid #000',\n            marginTop: 10,\n          }}\n        ></canvas>\n      </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}