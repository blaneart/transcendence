{"ast":null,"code":"var _jsxFileName = \"/Users/art/Desktop/transcendence/transcendence/transcendence/src/components/game/game.component.jsx\";\nimport { Component } from 'react';\nimport Pong from '../../game/game';\nimport './game.styles.scss'; // var Ball = {\n//   position_x: 50,\n//   position_y: 50,\n//   vel_x: 0.5,\n//   vel_y: 0.5\n// }\n// class Peddle {\n//   constructor(x, y) {\n//     this.position_x = x;\n//     this.position_y = y;\n//     this.size = [10, 50];\n//   }\n// }\n// let ball = Ball;\n// let peddleOne = new Peddle(10, 50);\n// let peddleTwo  = new Peddle(580, 150);\n// let ctx = null;\n// class Pong {\n//   constructor() \n//   {\n//     // score_1: 0,\n//     // score_2: 0\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor() {\n    super();\n    this.state = {\n      pong: null\n    };\n  }\n\n  componentDidMount() {\n    let canvas = document.getElementById('forCanvas');\n    this.state.pong.setState(new Pong(canvas));\n    console.log(this.state.animation);\n    canvas.addEventListener('mousemove', event => {\n      this.state.pong.players[0].pos.y = event.offsetY;\n    });\n    canvas.addEventListener('click', event => {\n      this.state.pong.start();\n    });\n  }\n\n  componentWillUnmount() {\n    this.state.pong.end();\n  }\n\n  render() {\n    console.log('render');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"forCanvas\",\n        width: 600,\n        height: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/art/Desktop/transcendence/transcendence/transcendence/src/components/game/game.component.jsx"],"names":["Component","Pong","Game","constructor","state","pong","componentDidMount","canvas","document","getElementById","setState","console","log","animation","addEventListener","event","players","pos","y","offsetY","start","componentWillUnmount","end","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAO,oBAAP,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAE3BG,EAAAA,WAAW,GACX;AACE;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAb;AACA,SAAKL,KAAL,CAAWC,IAAX,CAAgBK,QAAhB,CAAyB,IAAIT,IAAJ,CAASM,MAAT,CAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWS,SAAvB;AACAN,IAAAA,MAAM,CAACO,gBAAP,CAAwB,WAAxB,EAAqCC,KAAK,IAAI;AAC5C,WAAKX,KAAL,CAAWC,IAAX,CAAgBW,OAAhB,CAAwB,CAAxB,EAA2BC,GAA3B,CAA+BC,CAA/B,GAAmCH,KAAK,CAACI,OAAzC;AACD,KAFD;AAGAZ,IAAAA,MAAM,CAACO,gBAAP,CAAwB,OAAxB,EAAiCC,KAAK,IAAI;AACxC,WAAKX,KAAL,CAAWC,IAAX,CAAgBe,KAAhB;AACD,KAFD;AAGD;;AACDC,EAAAA,oBAAoB,GAAG;AACtB,SAAKjB,KAAL,CAAWC,IAAX,CAAgBiB,GAAhB;AACA;;AACDC,EAAAA,MAAM,GAAG;AACPZ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,KAAK,EAAE,GAA9B;AAAmC,QAAA,MAAM,EAAE;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA9B0B;;AAiC7B,eAAeV,IAAf","sourcesContent":["import { Component } from 'react';\nimport Pong from '../../game/game';\nimport './game.styles.scss';\n\n// var Ball = {\n//   position_x: 50,\n//   position_y: 50,\n//   vel_x: 0.5,\n//   vel_y: 0.5\n\n// }\n// class Peddle {\n//   constructor(x, y) {\n//     this.position_x = x;\n//     this.position_y = y;\n//     this.size = [10, 50];\n//   }\n\n// }\n// let ball = Ball;\n// let peddleOne = new Peddle(10, 50);\n// let peddleTwo  = new Peddle(580, 150);\n// let ctx = null;\n\n// class Pong {\n//   constructor() \n//   {\n//     // score_1: 0,\n//     // score_2: 0\n//   }\n// }\nclass Game extends Component {\n\n  constructor()\n  {\n    super();\n    this.state = {\n      pong: null\n    }\n  }\n  componentDidMount() {\n    let canvas = document.getElementById('forCanvas');\n    this.state.pong.setState(new Pong(canvas));\n    console.log(this.state.animation);\n    canvas.addEventListener('mousemove', event => {\n      this.state.pong.players[0].pos.y = event.offsetY;\n    });\n    canvas.addEventListener('click', event => {\n      this.state.pong.start();\n    });\n  }\n  componentWillUnmount() {\n   this.state.pong.end();\n  }\n  render() {\n    console.log('render');\n    return(\n      <div className='game'>\n        <canvas id=\"forCanvas\" width={600} height={400}></canvas>\n      </div>\n    );\n  }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}