{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSpring } from 'react-spring'; // UPDATE this path to your copy of the hook!\n// Source here: https://joshwcomeau.com/snippets/react-hooks/use-prefers-reduced-motion\n\nimport usePrefersReducedMotion from '@hooks/use-prefers-reduced-motion.hook';\n\nfunction useBoop({\n  x = 0,\n  y = 0,\n  rotation = 0,\n  scale = 1,\n  timing = 150,\n  springConfig = {\n    tension: 300,\n    friction: 10\n  }\n}) {\n  _s();\n\n  const prefersReducedMotion = usePrefersReducedMotion();\n  const [isBooped, setIsBooped] = React.useState(false);\n  const style = useSpring({\n    transform: isBooped ? `translate(${x}px, ${y}px)\n         rotate(${rotation}deg)\n         scale(${scale})` : `translate(0px, 0px)\n         rotate(0deg)\n         scale(1)`,\n    config: springConfig\n  });\n  React.useEffect(() => {\n    if (!isBooped) {\n      return;\n    }\n\n    const timeoutId = window.setTimeout(() => {\n      setIsBooped(false);\n    }, timing);\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isBooped]);\n  const trigger = React.useCallback(() => {\n    setIsBooped(true);\n  }, []);\n  let appliedStyle = prefersReducedMotion ? {} : style;\n  return [appliedStyle, trigger];\n}\n\n_s(useBoop, \"aa9qrWEb68xptRQ3EKc5ip+H4Qc=\", false, function () {\n  return [usePrefersReducedMotion, useSpring];\n});\n\nexport default useBoop;","map":{"version":3,"sources":["/Users/art/Desktop/transcendence/transcendence/transcendence/src/hooks/useBoop/use-boop.hook.jsx"],"names":["React","useSpring","usePrefersReducedMotion","useBoop","x","y","rotation","scale","timing","springConfig","tension","friction","prefersReducedMotion","isBooped","setIsBooped","useState","style","transform","config","useEffect","timeoutId","window","setTimeout","clearTimeout","trigger","useCallback","appliedStyle"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,cAA1B,C,CACA;AACA;;AACA,OAAOC,uBAAP,MAAoC,wCAApC;;AACA,SAASC,OAAT,CAAiB;AACfC,EAAAA,CAAC,GAAG,CADW;AAEfC,EAAAA,CAAC,GAAG,CAFW;AAGfC,EAAAA,QAAQ,GAAG,CAHI;AAIfC,EAAAA,KAAK,GAAG,CAJO;AAKfC,EAAAA,MAAM,GAAG,GALM;AAMfC,EAAAA,YAAY,GAAG;AACbC,IAAAA,OAAO,EAAE,GADI;AAEbC,IAAAA,QAAQ,EAAE;AAFG;AANA,CAAjB,EAUG;AAAA;;AACD,QAAMC,oBAAoB,GAAGV,uBAAuB,EAApD;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0Bd,KAAK,CAACe,QAAN,CAAe,KAAf,CAAhC;AACA,QAAMC,KAAK,GAAGf,SAAS,CAAC;AACtBgB,IAAAA,SAAS,EAAEJ,QAAQ,GACd,aAAYT,CAAE,OAAMC,CAAE;AAC/B,kBAAkBC,QAAS;AAC3B,iBAAiBC,KAAM,GAHA,GAId;AACT;AACA,kBAP0B;AAQtBW,IAAAA,MAAM,EAAET;AARc,GAAD,CAAvB;AAUAT,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACN,QAAL,EAAe;AACb;AACD;;AACD,UAAMO,SAAS,GAAGC,MAAM,CAACC,UAAP,CAAkB,MAAM;AACxCR,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAFiB,EAEfN,MAFe,CAAlB;AAGA,WAAO,MAAM;AACXa,MAAAA,MAAM,CAACE,YAAP,CAAoBH,SAApB;AACD,KAFD;AAGD,GAVD,EAUG,CAACP,QAAD,CAVH;AAWA,QAAMW,OAAO,GAAGxB,KAAK,CAACyB,WAAN,CAAkB,MAAM;AACtCX,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFe,EAEb,EAFa,CAAhB;AAGA,MAAIY,YAAY,GAAGd,oBAAoB,GAAG,EAAH,GAAQI,KAA/C;AACA,SAAO,CAACU,YAAD,EAAeF,OAAf,CAAP;AACD;;GAvCQrB,O;UAWsBD,uB,EAEfD,S;;;AA2BhB,eAAeE,OAAf","sourcesContent":["import React from 'react';\nimport { useSpring } from 'react-spring';\n// UPDATE this path to your copy of the hook!\n// Source here: https://joshwcomeau.com/snippets/react-hooks/use-prefers-reduced-motion\nimport usePrefersReducedMotion from '@hooks/use-prefers-reduced-motion.hook';\nfunction useBoop({\n  x = 0,\n  y = 0,\n  rotation = 0,\n  scale = 1,\n  timing = 150,\n  springConfig = {\n    tension: 300,\n    friction: 10,\n  },\n}) {\n  const prefersReducedMotion = usePrefersReducedMotion();\n  const [isBooped, setIsBooped] = React.useState(false);\n  const style = useSpring({\n    transform: isBooped\n      ? `translate(${x}px, ${y}px)\n         rotate(${rotation}deg)\n         scale(${scale})`\n      : `translate(0px, 0px)\n         rotate(0deg)\n         scale(1)`,\n    config: springConfig,\n  });\n  React.useEffect(() => {\n    if (!isBooped) {\n      return;\n    }\n    const timeoutId = window.setTimeout(() => {\n      setIsBooped(false);\n    }, timing);\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isBooped]);\n  const trigger = React.useCallback(() => {\n    setIsBooped(true);\n  }, []);\n  let appliedStyle = prefersReducedMotion ? {} : style;\n  return [appliedStyle, trigger];\n}\nexport default useBoop;"]},"metadata":{},"sourceType":"module"}