{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nconst QUERY = '(prefers-reduced-motion: no-preference)';\nconst isRenderingOnServer = typeof window === 'undefined';\n\nconst getInitialState = () => {\n  // For our initial server render, we won't know if the user\n  // prefers reduced motion, but it doesn't matter. This value\n  // will be overwritten on the client, before any animations\n  // occur.\n  return isRenderingOnServer ? true : !window.matchMedia(QUERY).matches;\n};\n\nfunction usePrefersReducedMotion() {\n  _s();\n\n  const [prefersReducedMotion, setPrefersReducedMotion] = React.useState(getInitialState);\n  React.useEffect(() => {\n    const mediaQueryList = window.matchMedia(QUERY);\n\n    const listener = event => {\n      setPrefersReducedMotion(!event.matches);\n    };\n\n    mediaQueryList.addListener(listener);\n    return () => {\n      mediaQueryList.removeListener(listener);\n    };\n  }, []);\n  return prefersReducedMotion;\n}\n\n_s(usePrefersReducedMotion, \"AtRFHVaYQ+ZGfd2c0obsL1DsiZw=\");","map":{"version":3,"sources":["/Users/art/Desktop/transcendence/transcendence/transcendence/src/hooks/use-prefers-reduced-motion/use-prefers-reduced-motion.hook.jsx"],"names":["React","QUERY","isRenderingOnServer","window","getInitialState","matchMedia","matches","usePrefersReducedMotion","prefersReducedMotion","setPrefersReducedMotion","useState","useEffect","mediaQueryList","listener","event","addListener","removeListener"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,KAAK,GAAG,yCAAd;AACA,MAAMC,mBAAmB,GAAG,OAAOC,MAAP,KAAkB,WAA9C;;AACA,MAAMC,eAAe,GAAG,MAAM;AAC5B;AACA;AACA;AACA;AACA,SAAOF,mBAAmB,GAAG,IAAH,GAAU,CAACC,MAAM,CAACE,UAAP,CAAkBJ,KAAlB,EAAyBK,OAA9D;AACD,CAND;;AAOA,SAASC,uBAAT,GAAmC;AAAA;;AACjC,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDT,KAAK,CAACU,QAAN,CACtDN,eADsD,CAAxD;AAGAJ,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpB,UAAMC,cAAc,GAAGT,MAAM,CAACE,UAAP,CAAkBJ,KAAlB,CAAvB;;AACA,UAAMY,QAAQ,GAAIC,KAAD,IAAW;AAC1BL,MAAAA,uBAAuB,CAAC,CAACK,KAAK,CAACR,OAAR,CAAvB;AACD,KAFD;;AAGAM,IAAAA,cAAc,CAACG,WAAf,CAA2BF,QAA3B;AACA,WAAO,MAAM;AACXD,MAAAA,cAAc,CAACI,cAAf,CAA8BH,QAA9B;AACD,KAFD;AAGD,GATD,EASG,EATH;AAUA,SAAOL,oBAAP;AACD;;GAfQD,uB","sourcesContent":["import React from 'react';\nconst QUERY = '(prefers-reduced-motion: no-preference)';\nconst isRenderingOnServer = typeof window === 'undefined';\nconst getInitialState = () => {\n  // For our initial server render, we won't know if the user\n  // prefers reduced motion, but it doesn't matter. This value\n  // will be overwritten on the client, before any animations\n  // occur.\n  return isRenderingOnServer ? true : !window.matchMedia(QUERY).matches;\n};\nfunction usePrefersReducedMotion() {\n  const [prefersReducedMotion, setPrefersReducedMotion] = React.useState(\n    getInitialState\n  );\n  React.useEffect(() => {\n    const mediaQueryList = window.matchMedia(QUERY);\n    const listener = (event) => {\n      setPrefersReducedMotion(!event.matches);\n    };\n    mediaQueryList.addListener(listener);\n    return () => {\n      mediaQueryList.removeListener(listener);\n    };\n  }, []);\n  return prefersReducedMotion;\n}"]},"metadata":{},"sourceType":"module"}