{"ast":null,"code":"if (!Function.prototype.bind) {\n  Function.prototype.bind = function (obj) {\n    var slice = [].slice,\n        args = slice.call(arguments, 1),\n        self = this,\n        nop = function () {},\n        bound = function () {\n      return self.apply(this instanceof nop ? this : obj || {}, args.concat(slice.call(arguments)));\n    };\n\n    nop.prototype = self.prototype;\n    bound.prototype = new nop();\n    return bound;\n  };\n}\n\nif (!Object.create) {\n  Object.create = function (base) {\n    function F() {}\n\n    ;\n    F.prototype = base;\n    return new F();\n  };\n}\n\nif (!Object.construct) {\n  Object.construct = function (base) {\n    var instance = Object.create(base);\n    if (instance.initialize) instance.initialize.apply(instance, [].slice.call(arguments, 1));\n    return instance;\n  };\n}\n\nif (!Object.extend) {\n  Object.extend = function (destination, source) {\n    for (var property in source) {\n      if (source.hasOwnProperty(property)) destination[property] = source[property];\n    }\n\n    return destination;\n  };\n}\n/* NOT READY FOR PRIME TIME\nif (!window.requestAnimationFrame) {// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n  window.requestAnimationFrame = window.webkitRequestAnimationFrame || \n                                 window.mozRequestAnimationFrame    || \n                                 window.oRequestAnimationFrame      || \n                                 window.msRequestAnimationFrame     || \n                                 function(callback, element) {\n                                   window.setTimeout(callback, 1000 / 60);\n                                 }\n                                 */\n\n\nGame_pong = {\n  start: function (id, game, cfg) {\n    return Object.construct(Game_pong.Runner, id, game, cfg).game;\n  },\n  addEvent: function (obj, type, fn) {\n    obj.addEventListener(type, fn, false);\n  },\n  removeEvent: function (obj, type, fn) {\n    obj.removeEventListener(type, fn, false);\n  },\n  random: function (min, max) {\n    return min + Math.random() * (max - min);\n  },\n  timestamp: function () {\n    return new Date().getTime();\n  },\n  Runner: {\n    initialize: function (id, game, cfg) {\n      this.cfg = Object.extend(game.Defaults || {}, cfg || {}); // use game defaults (if any) and extend with custom cfg (if any)\n\n      this.fps = this.cfg.fps || 60;\n      this.interval = 1000.0 / this.fps;\n      this.canvas = document.getElementById(id);\n      this.width = this.cfg.width || this.canvas.offsetWidth;\n      this.height = this.cfg.height || this.canvas.offsetHeight;\n      this.front = this.canvas;\n      this.front.width = this.width;\n      this.front.height = this.height;\n      this.back = Game_pong.createCanvas();\n      this.back.width = this.width;\n      this.back.height = this.height;\n      this.front2d = this.front.getContext('2d');\n      this.back2d = this.back.getContext('2d');\n      this.addEvents();\n      this.resetStats();\n      this.game = Object.construct(game, this, this.cfg); // finally construct the game object itself\n    },\n    start: function () {\n      this.lastFrame = Game_pong.timestamp();\n      this.timer = setInterval(this.loop.bind(this), this.interval);\n    },\n    stop: function () {\n      clearInterval(this.timer);\n    },\n    loop: function () {\n      var start = Game_pong.timestamp();\n      this.update((start - this.lastFrame) / 1000.0); // send dt as seconds\n\n      var middle = Game_pong.timestamp();\n      this.draw();\n      var end = Game_pong.timestamp();\n      this.updateStats(middle - start, end - middle);\n      this.lastFrame = start;\n    },\n    update: function (dt) {\n      this.game.update(dt);\n    },\n    draw: function () {\n      this.back2d.clearRect(0, 0, this.width, this.height);\n      this.game.draw(this.back2d);\n      this.drawStats(this.back2d);\n      this.front2d.clearRect(0, 0, this.width, this.height);\n      this.front2d.drawImage(this.back, 0, 0);\n    },\n    resetStats: function () {\n      this.stats = {\n        count: 0,\n        fps: 0,\n        update: 0,\n        draw: 0,\n        frame: 0 // update + draw\n\n      };\n    },\n    updateStats: function (update, draw) {\n      if (this.cfg.stats) {\n        this.stats.update = Math.max(1, update);\n        this.stats.draw = Math.max(1, draw);\n        this.stats.frame = this.stats.update + this.stats.draw;\n        this.stats.count = this.stats.count == this.fps ? 0 : this.stats.count + 1;\n        this.stats.fps = Math.min(this.fps, 1000 / this.stats.frame);\n      }\n    },\n    drawStats: function (ctx) {\n      if (this.cfg.stats) {\n        ctx.fillText(\"frame: \" + this.stats.count, this.width - 100, this.height - 60);\n        ctx.fillText(\"fps: \" + this.stats.fps, this.width - 100, this.height - 50);\n        ctx.fillText(\"update: \" + this.stats.update + \"ms\", this.width - 100, this.height - 40);\n        ctx.fillText(\"draw: \" + this.stats.draw + \"ms\", this.width - 100, this.height - 30);\n      }\n    },\n    addEvents: function () {\n      Game_pong.addEvent(document, 'keydown', this.onkeydown.bind(this));\n      Game_pong.addEvent(document, 'keyup', this.onkeyup.bind(this));\n    },\n    onkeydown: function (ev) {\n      if (this.game.onkeydown) this.game.onkeydown(ev.keyCode);\n    },\n    onkeyup: function (ev) {\n      if (this.game.onkeyup) this.game.onkeyup(ev.keyCode);\n    },\n    hideCursor: function () {\n      this.canvas.style.cursor = 'none';\n    },\n    showCursor: function () {\n      this.canvas.style.cursor = 'auto';\n    },\n    alert: function (msg) {\n      this.stop(); // alert blocks thread, so need to stop game loop in order to avoid sending huge dt values to next update\n\n      result = window.alert(msg);\n      this.start();\n      return result;\n    },\n    confirm: function (msg) {\n      this.stop(); // alert blocks thread, so need to stop game loop in order to avoid sending huge dt values to next update\n\n      result = window.confirm(msg);\n      this.start();\n      return result;\n    }\n  }\n};\nmodule.exports = {\n  Game_pong\n};","map":{"version":3,"sources":["/Users/art/Desktop/transcendence/transcendence/transcendence/src/game/game.js"],"names":["Function","prototype","bind","obj","slice","args","call","arguments","self","nop","bound","apply","concat","Object","create","base","F","construct","instance","initialize","extend","destination","source","property","hasOwnProperty","Game_pong","start","id","game","cfg","Runner","addEvent","type","fn","addEventListener","removeEvent","removeEventListener","random","min","max","Math","timestamp","Date","getTime","Defaults","fps","interval","canvas","document","getElementById","width","offsetWidth","height","offsetHeight","front","back","createCanvas","front2d","getContext","back2d","addEvents","resetStats","lastFrame","timer","setInterval","loop","stop","clearInterval","update","middle","draw","end","updateStats","dt","clearRect","drawStats","drawImage","stats","count","frame","ctx","fillText","onkeydown","onkeyup","ev","keyCode","hideCursor","style","cursor","showCursor","alert","msg","result","window","confirm","module","exports"],"mappings":"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","sourcesContent":["\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function(obj) {\n      var slice = [].slice,\n          args  = slice.call(arguments, 1),\n          self  = this,\n          nop   = function () {},\n          bound = function () {\n            return self.apply(this instanceof nop ? this : (obj || {}), args.concat(slice.call(arguments)));   \n          };\n      nop.prototype   = self.prototype;\n      bound.prototype = new nop();\n      return bound;\n    };\n  }\n  \n  if (!Object.create) {\n    Object.create = function(base) {\n      function F() {};\n      F.prototype = base;\n      return new F();\n    }\n  }\n  \n  if (!Object.construct) {\n    Object.construct = function(base) {\n      var instance = Object.create(base);\n      if (instance.initialize)\n        instance.initialize.apply(instance, [].slice.call(arguments, 1));\n      return instance;\n    }\n  }\n  \n  if (!Object.extend) {\n    Object.extend = function(destination, source) {\n      for (var property in source) {\n        if (source.hasOwnProperty(property))\n          destination[property] = source[property];\n      }\n      return destination;\n    };\n  }\n  \n  /* NOT READY FOR PRIME TIME\n  if (!window.requestAnimationFrame) {// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n    window.requestAnimationFrame = window.webkitRequestAnimationFrame || \n                                   window.mozRequestAnimationFrame    || \n                                   window.oRequestAnimationFrame      || \n                                   window.msRequestAnimationFrame     || \n                                   function(callback, element) {\n                                     window.setTimeout(callback, 1000 / 60);\n                                   }\n                                   */\nGame_pong = {\n    start: function(id, game, cfg) {\n        return Object.construct(Game_pong.Runner, id, game, cfg).game;\n    },\n    addEvent:    function(obj, type, fn) { obj.addEventListener(type, fn, false);    },\n    removeEvent: function(obj, type, fn) { obj.removeEventListener(type, fn, false); },\n    random: function(min, max) {\n        return (min + (Math.random() * (max - min)));\n    },\n    timestamp: function() { \n        return new Date().getTime();\n    },\n    Runner: {\n\n        initialize: function(id, game, cfg) {\n          this.cfg          = Object.extend(game.Defaults || {}, cfg || {}); // use game defaults (if any) and extend with custom cfg (if any)\n          this.fps          = this.cfg.fps || 60;\n          this.interval     = 1000.0 / this.fps;\n          this.canvas       = document.getElementById(id);\n          this.width        = this.cfg.width  || this.canvas.offsetWidth;\n          this.height       = this.cfg.height || this.canvas.offsetHeight;\n          this.front        = this.canvas;\n          this.front.width  = this.width;\n          this.front.height = this.height;\n          this.back         = Game_pong.createCanvas();\n          this.back.width   = this.width;\n          this.back.height  = this.height;\n          this.front2d      = this.front.getContext('2d');\n          this.back2d       = this.back.getContext('2d');\n          this.addEvents();\n          this.resetStats();\n    \n          this.game = Object.construct(game, this, this.cfg); // finally construct the game object itself\n        },\n\n        start: function() { \n            this.lastFrame = Game_pong.timestamp();\n            this.timer     = setInterval(this.loop.bind(this), this.interval);\n          },\n\n        stop: function() {\n            clearInterval(this.timer);\n        },\n\n        loop: function() {\n            var start  = Game_pong.timestamp(); this.update((start - this.lastFrame)/1000.0); // send dt as seconds\n            var middle = Game_pong.timestamp(); this.draw();\n            var end    = Game_pong.timestamp();\n            this.updateStats(middle - start, end - middle);\n            this.lastFrame = start;\n          },\n      \n          update: function(dt) {\n            this.game.update(dt);\n          },\n      \n          draw: function() {\n            this.back2d.clearRect(0, 0, this.width, this.height);\n            this.game.draw(this.back2d);\n            this.drawStats(this.back2d);\n            this.front2d.clearRect(0, 0, this.width, this.height);\n            this.front2d.drawImage(this.back, 0, 0);\n          },\n      \n          resetStats: function() {\n            this.stats = {\n              count:  0,\n              fps:    0,\n              update: 0,\n              draw:   0, \n              frame:  0  // update + draw\n            };\n          },\n      \n          updateStats: function(update, draw) {\n            if (this.cfg.stats) {\n              this.stats.update = Math.max(1, update);\n              this.stats.draw   = Math.max(1, draw);\n              this.stats.frame  = this.stats.update + this.stats.draw;\n              this.stats.count  = this.stats.count == this.fps ? 0 : this.stats.count + 1;\n              this.stats.fps    = Math.min(this.fps, 1000 / this.stats.frame);\n            }\n          },\n      \n          drawStats: function(ctx) {\n            if (this.cfg.stats) {\n              ctx.fillText(\"frame: \"  + this.stats.count,         this.width - 100, this.height - 60);\n              ctx.fillText(\"fps: \"    + this.stats.fps,           this.width - 100, this.height - 50);\n              ctx.fillText(\"update: \" + this.stats.update + \"ms\", this.width - 100, this.height - 40);\n              ctx.fillText(\"draw: \"   + this.stats.draw   + \"ms\", this.width - 100, this.height - 30);\n            }\n          },\n      \n          addEvents: function() {\n            Game_pong.addEvent(document, 'keydown', this.onkeydown.bind(this));\n            Game_pong.addEvent(document, 'keyup',   this.onkeyup.bind(this));\n          },\n      \n          onkeydown: function(ev) { if (this.game.onkeydown) this.game.onkeydown(ev.keyCode); },\n          onkeyup:   function(ev) { if (this.game.onkeyup)   this.game.onkeyup(ev.keyCode);   },\n      \n          hideCursor: function() { this.canvas.style.cursor = 'none'; },\n          showCursor: function() { this.canvas.style.cursor = 'auto'; },\n      \n          alert: function(msg) {\n            this.stop(); // alert blocks thread, so need to stop game loop in order to avoid sending huge dt values to next update\n            result = window.alert(msg);\n            this.start();\n            return result;\n          },\n      \n          confirm: function(msg) {\n            this.stop(); // alert blocks thread, so need to stop game loop in order to avoid sending huge dt values to next update\n            result = window.confirm(msg);\n            this.start();\n            return result;\n          }      \n    }\n}\n\nmodule.exports = {\n    Game_pong\n};"]},"metadata":{},"sourceType":"module"}