{"ast":null,"code":"var _jsxFileName = \"/Users/art/Desktop/transcendence/transcendence/transcendence/src/components/game/game.component.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useKeyPress(targetKey) {\n  _s();\n\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false); // If pressed key is our target key then set to true\n\n  function downHandler({\n    key\n  }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  } // If released key is our target key then set to false\n\n\n  const upHandler = ({\n    key\n  }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  }; // Add event listeners\n\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler); // Remove event listeners on cleanup\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n\n_s(useKeyPress, \"vmDSD7h68k9Z7B48/eX82jyokKU=\");\n\nexport const Game = () => {\n  _s2();\n\n  const [score_1, setScore_1] = useState(0);\n  const [score_2, setScore_2] = useState(0);\n  const [pos_1, setPos_1] = useState(50);\n  const [pos_2, setPos_2] = useState(20);\n  const [width, setWidth] = useState(800);\n  const [height, setHeight] = useState(600);\n  setSPress(useKeyPress(\"s\")); // constructor()\n  // {\n  //     super();\n  //     this.state = {\n  //       score_player_1: 0,\n  //       score_player_2: 0,\n  //       player_1_position: 50,\n  //       player_2_position: 0\n  //     }\n  // }\n\n  const drawBall = (context, x, y) => {\n    context.fillStyle = \"white\";\n    context.fillRect(x, y, 20, 20);\n  };\n\n  const drawPeddle = (context, x, y) => {\n    context.fillStyle = \"white\";\n    context.fillRect(x, y, 20, 80);\n  };\n\n  const drawLine = (context, width, height) => {\n    context.strokeStyle = \"white\";\n    context.setLineDash([15, 5]);\n    context.moveTo(width / 2, 0);\n    context.lineTo(width / 2, height + 5);\n    context.stroke();\n  };\n\n  const drawScore = (context, width, height) => {\n    context.font = \"100px Mina\";\n    context.fillStyle = \"white\";\n    context.fillText(score_1, width / 4, height / 4);\n    context.fillText(score_2, width * 3 / 4, height / 4);\n  };\n\n  const draw = (context, width, height, player_1_position) => {\n    context.fillStyle = \"black\";\n    context.fillRect(0, 0, width, height);\n    context.beginPath();\n    drawBall(context, 200, 200);\n    drawLine(context, width, height);\n    drawPeddle(context, 10, player_1_position);\n    drawPeddle(context, width - 30, 150);\n    drawScore(context, width, height);\n  }; // componentWillMount() {\n  //     window.addEventListener('keydown', this.handleKeyboardInput.bind(this));\n  // }  \n  // handleKeyboardInput = (e) => {\n  //     const code = e.keyCode ? e.keyCode : e.which;\n  //     if (code === 38) { //up key\n  //         this.setState({ keyboardInput: {'Y', -1 }});\n  //     }\n  // }\n\n\n  const canvasRef = useRef();\n  useEffect(() => {\n    if (sPress) setPos_1(pos_1 - 1);\n    const context = canvasRef.current.getContext(\"2d\");\n    draw(context, width, height, pos_1);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"canvas\",\n        ref: canvasRef,\n        width: width,\n        height: height,\n        style: {\n          border: '2px solid #000',\n          marginTop: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 13\n  }, this);\n};\n\n_s2(Game, \"E9UH4PNWybFNKJbIdtiJL9oUKBU=\", false, function () {\n  return [useKeyPress];\n});\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/art/Desktop/transcendence/transcendence/transcendence/src/components/game/game.component.jsx"],"names":["useState","useEffect","useRef","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","window","addEventListener","removeEventListener","Game","score_1","setScore_1","score_2","setScore_2","pos_1","setPos_1","pos_2","setPos_2","width","setWidth","height","setHeight","setSPress","drawBall","context","x","y","fillStyle","fillRect","drawPeddle","drawLine","strokeStyle","setLineDash","moveTo","lineTo","stroke","drawScore","font","fillText","draw","player_1_position","beginPath","canvasRef","sPress","current","getContext","textAlign","border","marginTop"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\n\nfunction useKeyPress(targetKey) {\n    // State for keeping track of whether key is pressed\n    const [keyPressed, setKeyPressed] = useState(false);\n    // If pressed key is our target key then set to true\n    function downHandler({ key }) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n    // If released key is our target key then set to false\n    const upHandler = ({ key }) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n    // Add event listeners\n    useEffect(() => {\n      window.addEventListener(\"keydown\", downHandler);\n      window.addEventListener(\"keyup\", upHandler);\n      // Remove event listeners on cleanup\n      return () => {\n        window.removeEventListener(\"keydown\", downHandler);\n        window.removeEventListener(\"keyup\", upHandler);\n      };\n    }, []); // Empty array ensures that effect is only run on mount and unmount\n    return keyPressed;\n  }\n\nexport const Game = () => {\n\n    const [score_1, setScore_1] = useState(0);\n    const [score_2, setScore_2] = useState(0);\n    const [pos_1, setPos_1] = useState(50);\n    const [pos_2, setPos_2] = useState(20);\n    const [width, setWidth] = useState(800);\n    const [height, setHeight] = useState(600);\n\n  \n    setSPress(useKeyPress(\"s\"));\n\n    // constructor()\n    // {\n    //     super();\n    //     this.state = {\n    //       score_player_1: 0,\n    //       score_player_2: 0,\n    //       player_1_position: 50,\n    //       player_2_position: 0\n    //     }\n\n    // }\n\n    const drawBall = (context, x, y) => {\n        context.fillStyle = \"white\";\n        context.fillRect(x, y, 20, 20);\n    }\n    const drawPeddle = (context, x, y) => {\n        context.fillStyle = \"white\";\n        context.fillRect(x, y, 20,  80);\n    }\n    \n    const drawLine = (context, width, height) => {\n    \n        context.strokeStyle = \"white\";\n        context.setLineDash([15, 5]);\n        context.moveTo(width / 2, 0);\n        context.lineTo(width / 2, height + 5);\n        context.stroke();  \n    }\n    \n    const drawScore = (context, width, height) => {\n        context.font = \"100px Mina\";\n        context.fillStyle = \"white\";\n        context.fillText(score_1,  width / 4 , height / 4);\n        context.fillText(score_2,  width * 3 / 4 , height / 4);\n    }\n\n    const draw = (context, width, height, player_1_position) => {\n    context.fillStyle = \"black\";\n    context.fillRect(0, 0, width,  height);\n    context.beginPath();\n    drawBall(context, 200, 200);\n    drawLine(context, width, height);\n    drawPeddle(context, 10, player_1_position);\n    drawPeddle(context, width - 30, 150);\n    drawScore(context, width, height);\n\n  };\n\n    // componentWillMount() {\n    //     window.addEventListener('keydown', this.handleKeyboardInput.bind(this));\n    // }  \n    // handleKeyboardInput = (e) => {\n    //     const code = e.keyCode ? e.keyCode : e.which;\n\n    //     if (code === 38) { //up key\n    //         this.setState({ keyboardInput: {'Y', -1 }});\n    //     }\n    // }\n    const canvasRef =  useRef();\n    useEffect(() => {\n        if (sPress)\n            setPos_1(pos_1 - 1);\n        const context = canvasRef.current.getContext(\"2d\");\n        draw(context, width, height, pos_1);\n      });\n\n\n        return(\n            <div className='game'>\n                <h1>Game</h1>\n                {/* <Canvas draw={this.draw} height={500} width={900} player_1_position/> */}\n                <div\n        style={{\n          textAlign: 'center',\n        }}>\n        <canvas\n          id=\"canvas\"\n          ref={canvasRef}\n          width={width}\n          height={height}\n          style={{\n            border: '2px solid #000',\n            marginTop: 10,\n          }}\n        ></canvas>\n      </div>\n            </div>\n        );\n    }\n\n"]},"metadata":{},"sourceType":"module"}