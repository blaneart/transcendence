{"ast":null,"code":"var _jsxFileName = \"/Users/art/Desktop/transcendence/transcendence/transcendence/src/pages/sign-in/sign-in.component.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport FormInput from '../../components/form-input/form-input.component';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Signin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        email: '',\n        password: ''\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmitSignIn = () => {\n      console.log(this.props.user);\n      fetch('http://localhost:3000/signin', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password\n        })\n      }).then(response => response.json()).then(user => {\n        if (user.id) {\n          this.props.loadUser(user);\n        }\n      });\n      console.log(this.props.user);\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          value: this.state.email,\n          handleChange: this.handleChange,\n          label: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          handleChange: this.handleChange,\n          label: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          onClick: this.onSubmitSignIn,\n          type: \"submit\",\n          value: \"Submit Form\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Signin);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/art/Desktop/transcendence/transcendence/transcendence/src/pages/sign-in/sign-in.component.jsx"],"names":["React","withRouter","FormInput","CustomButton","Signin","Component","constructor","props","handleSubmit","event","preventDefault","setState","email","password","handleChange","value","name","target","onSubmitSignIn","console","log","user","fetch","method","headers","body","JSON","stringify","state","then","response","json","id","loadUser","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport FormInput from '../../components/form-input/form-input.component';\nimport CustomButton from '../../components/custom-button/custom-button.component';\n\nclass Signin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.setState({ email:'', password:''});\n}\n\nhandleChange = event => {\n    const { value, name } = event.target;\n    this.setState({ [name]: value })\n}\n  // onEmailChange = (event) => {\n  //   this.setState({signInEmail: event.target.value})\n  // }\n\n  // onPasswordChange = (event) => {\n  //   this.setState({signInPassword: event.target.value})\n  // }\n\n  onSubmitSignIn = () => {\n    console.log(this.props.user);\n    fetch('http://localhost:3000/signin', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password\n      })\n        })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.props.loadUser(user)\n\n        }\n      })\n\n      console.log(this.props.user);\n\n  }\n\n  render() {\n    return (\n      <div className='sign-in'>\n      <h2>I already have an account</h2>\n      <span>Sign in with your email and password</span>\n      <form onSubmit={this.handleSubmit}>\n          <FormInput name=\"email\" type=\"email\"\n          value={this.state.email} handleChange={this.handleChange}\n          label='email' required/>\n          <FormInput name=\"password\" type=\"password\"\n          value={this.state.password} handleChange={this.handleChange}\n           label='password' required/>\n          \n          <CustomButton onClick={this.onSubmitSignIn} type=\"submit\"\n           value='Submit Form'>Sign In</CustomButton>\n                          </form>\n  </div>\n    );\n  }\n}\n\nexport default withRouter(Signin);"]},"metadata":{},"sourceType":"module"}